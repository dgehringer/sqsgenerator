name: Wheels

on:
  release:
    types:
      - published
  push:
    branches:
      - main


permissions:
  contents: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VCPKG_FEATURE_FLAGS: "-manifests"

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # Required on macOS to build gmp package
      - name: Install autoconf
        run: brew install autoconf-archive libtool automake pkgconf pkg-config
        if: ${{ runner.os == 'macOS' }}

      - uses: pypa/cibuildwheel@v3.0.0rc1
        with:
          package-dir: ./python
          output-dir: wheelhouse
        env:
          CIBW_ARCHS_MACOS: "arm64"
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ARCHS_WINDOWS: "x86_64"
          CIBW_BUILD_FRONTEND: "build; args: --no-isolation"
          CIBW_ENVIRONMENT: |
            VCPKG_BINARY_SOURCES="x-gha,readwrite"
            VCPKG_INSTALLED_DIR="/tmp/vcpkg_installed"
            CMAKE_ARGS="-DCMAKE_CXX_FLAGS=-w"

          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_34
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_34
          CIBW_BEFORE_ALL_LINUX: |
            cp vcpkg.cibuildwheel.json vcpkg.json
          CIBW_BEFORE_TEST: |
            echo "Contents of wheelhouse:"
            ls -la /tmp/cibuildwheel/built_wheel
            pip install /tmp/cibuildwheel/built_wheel/*.whl --verbose
          CIBW_BEFORE_BUILD: |
            pip install --upgrade pip-tools
            pip-compile -v --all-build-deps --output-file=requirements-ci.txt --strip-extras python/pyproject.toml
            pip install -r requirements-ci.txt

            echo "Python executable: $(which python)"
            echo "Python prefix: $(python -c 'import sys; print(sys.prefix)')"
            echo "Include dir: $(python -c 'import sysconfig; print(sysconfig.get_path("include"))')"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}
          path: wheelhouse/*.whl


  upload_all:
    name: Upload if release
    needs: [build_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.pypi_password }}

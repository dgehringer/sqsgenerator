name: Wheels

on:
  release:
    types:
      - published
  push:
    branches:
      - main


permissions:
  contents: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VCPKG_FEATURE_FLAGS: "-manifests"

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, macos-15 ]

    steps:

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: friendlyanon/setup-vcpkg@v1
        if: ${{ runner.os != 'Linux' }}

      - uses: pypa/cibuildwheel@v3.0
        with:
          package-dir: ./python
          output-dir: wheelhouse
        env:
          CIBW_BUILD_VERBOSITY: "3"
          CIBW_ARCHS_MACOS: "arm64"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_WINDOWS: "AMD64"
          CIBW_BUILD_FRONTEND: "build; args: --no-isolation"
          CIBW_ENVIRONMENT_PASS_LINUX: "ACTIONS_RUNTIME_TOKEN ACTIONS_CACHE_URL CC CXX CMAKE_ARGS"
          CIBW_BEFORE_ALL_LINUX: |
            dnf -y install curl zip unzip tar
            ./vcpkg/bootstrap-vcpkg.sh
          CIBW_ENVIRONMENT_LINUX: |
            CMAKE_ARGS="-DCMAKE_CXX_COMPILER=/usr/local/bin/c++ -DCMAKE_C_COMPILER=/usr/local/bin/cc"
            CXX=/usr/local/bin/c++
            CC=/usr/local/bin/cc
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_34
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_34
          CIBW_ENVIRONMENT_MACOS: |
            MACOSX_DEPLOYMENT_TARGET=11.0
            CMAKE_ARGS="-DCMAKE_OSX_DEPLOYMENT_TARGET=11.0"
          CIBW_BEFORE_BUILD_WINDOWS: call scripts/install-build-deps.bat
          CIBW_BEFORE_BUILD: |
            pip install --upgrade pip-tools
            pip-compile -v --all-build-deps --output-file=requirements-ci.txt --strip-extras python/pyproject.toml
            pip install -r requirements-ci.txt

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}
          path: wheelhouse/*.whl


  upload_all:
    name: Upload if release
    needs: [ build_wheels ]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

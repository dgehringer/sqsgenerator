name: wheels

on:
  release:
    types:
      - published
  push:
    branches:
      - main


permissions:
  contents: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VCPKG_FEATURE_FLAGS: "-manifests"

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, macos-15, ubuntu-latest, ubuntu-22.04-arm ]

    steps:

      - uses: actions/checkout@v5
        with:
          submodules: recursive

      - uses: friendlyanon/setup-vcpkg@v1
        if: ${{ runner.os != 'Linux' }}

      - uses: pypa/cibuildwheel@v3.2
        with:
          package-dir: ./python
          output-dir: wheelhouse
        env:
          CIBW_ARCHS_WINDOWS: "AMD64"
          CIBW_BUILD_FRONTEND: "build"
          CIBW_BEFORE_ALL_LINUX: |
            dnf -y install curl zip unzip tar git
            ./vcpkg/bootstrap-vcpkg.sh
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_34
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_34

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}
          path: wheelhouse/*.whl


  upload_all:
    name: Upload if release
    needs: [ build_wheels ]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/setup-python@v6
        with:
          python-version: "3.x"

      - uses: actions/download-artifact@v5
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
